---
description: Essential development rules for Product Base
globs:
alwaysApply: true
---

**⚠️ CRITICAL WARNING:**
- **NEVER run `cp -p .env.sample .env`** - This will overwrite existing environment variables
- **NEVER use `cp` command** - Use `cat > file` or `write` tool instead
- Always check if .env already exists before creating it
- Use `cat .env` to check current values first

**Environment Variables:**
- Use project root `.env` file only
- `apps/web/.env` must be a symbolic link: `ln -s ../../.env apps/web/.env`
- Never create `.env.local` files

**Database:**
- External Supabase (not local PostgreSQL)
- Use `psql` for database operations
- Connection via `SUPABASE_DATABASE_URL` environment variable

**Testing:**
- Use Playwright MCP for verification after changes
- Use Playwright MCP for Supabase, Stripe, Google Cloud Platform configuration screens
- Check console logs for errors

**Maintenance:**
- Clear cache and restart server when disk space is low (see @setup-guide.md)

**Schema Consistency:**
- When schema, migration files, and Supabase database state are inconsistent:
  - Investigate Supabase service database state using `psql`
  - Compare differences with schema and migration files
  - If differences exist, align schema files with database state first, then decide on fix strategy
- When hardcoded information diverges from database: Always refactor hardcoded values to fetch from database

**Development Order:**
- Always develop in this order to maintain architecture integrity:
  1. Infrastructure layer (database, external service connections)
  2. Service layer (business logic)
  3. Frontend and API layer (presentation)
- This prevents architectural breakdown and ensures proper dependency flow