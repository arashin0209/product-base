version: '3.8'

services:
  # Next.jsアプリケーション
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_GOLD_PRICE_ID=${STRIPE_GOLD_PRICE_ID}
      - STRIPE_PLATINUM_PRICE_ID=${STRIPE_PLATINUM_PRICE_ID}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    env_file:
      - .env
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL データベース（開発用）
  db:
    image: postgres:15-alpine
    container_name: product-base-postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: product_base
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - dev

  # pgAdmin（データベース管理用）
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: product-base-pgadmin
    ports:
      - '8080:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
